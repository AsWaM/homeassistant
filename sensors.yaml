###Historique###
- platform: history_stats
  name: Cleaned Today
  entity_id: vacuum.xiaomi_vacuum_cleaner
  state: 'cleaning'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: history_stats
  name: Already Snoozed Notifs
  entity_id: input_boolean.snooze_notifs
  state: 'on'
  type: count
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
###Waze###
- platform: waze_travel_time
  name: !redacted
  origin: !redacted
  destination: !redacted
  region: 'EU'
### Pi monitoring ###
- platform: command_line
  name: PI CPU Temp
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  unit_of_measurement: "°C"
  value_template: '{{ "%.2f"|format(value|multiply(0.001)) }}'
###Garage###
- platform: mqtt
  name: Garage Door Status
  state_topic: "garadget/Garage/status"
  value_template: '{{ value_json.status }}'
- platform: mqtt
  name: "Garage Door Since"
  state_topic: "garadget/Garage/status"
  value_template: '{{ value_json.time }}'

###Plantes###

- platform: miflora
  mac: '!redacted'
  name: Flower1
  force_update: false
  median: 3
  monitored_conditions:
    - moisture
    - light
    - temperature
    - conductivity
    - battery
- platform: miflora
  mac: '!redacted'
  name: Flower2
  force_update: false
  median: 3
  monitored_conditions:
    - moisture
    - light
    - temperature
    - conductivity
    - battery

### Météo ###
- platform: yr
  name: yr
  forecast: 24
  monitored_conditions:
    - temperature
    - symbol
    - precipitation
    - windSpeed
    - pressure
    - humidity

### Calculés ###
- platform: template
  sensors:
    vacuum_status:
      friendly_name: Etat Aspirateur
      value_template: "{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.status }}"
### Batterie capteurs ###
    bat_mvt_sdb:
      friendly_name: Mouvement SDB
      value_template: >
        {% if is_state('binary_sensor.motion_sensor_158d0001e47f52', 'unknown') %}
          110
        {% else %}
          {{ states.binary_sensor.motion_sensor_158d0001e47f52.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.binary_sensor.motion_sensor_158d0001e47f52.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('binary_sensor.motion_sensor_158d0001e47f52', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_mvt_entree:
      friendly_name: Mouvement Entrée
      value_template: >
        {% if is_state('binary_sensor.motion_sensor_158d0001e47d34', 'unknown') %}
          110
        {% else %}
          {{ states.binary_sensor.motion_sensor_158d0001e47d34.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.binary_sensor.motion_sensor_158d0001e47d34.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('binary_sensor.motion_sensor_158d0001e47d34', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_mvt_couloir:
      friendly_name: Mouvement Couloir
      value_template: >
        {% if is_state('binary_sensor.motion_sensor_158d0001ddca38', 'unknown') %}
          110
        {% else %}
          {{ states.binary_sensor.motion_sensor_158d0001ddca38.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.binary_sensor.motion_sensor_158d0001ddca38.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('binary_sensor.motion_sensor_158d0001ddca38', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_mvt_salon:
      friendly_name: Mouvement Salon
      value_template: >
        {% if is_state('binary_sensor.motion_sensor_158d0001b7542d', 'unknown') %}
          110
        {% else %}
          {{ states.binary_sensor.motion_sensor_158d0001b7542d.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.binary_sensor.motion_sensor_158d0001b7542d.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('binary_sensor.motion_sensor_158d0001b7542d', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_ouv_chiotte:
      friendly_name: Ouverture Chiotte
      value_template: >
        {% if is_state('binary_sensor.door_window_sensor_158d0001ab1b67', 'unknown') %}
          110
        {% else %}
          {{ states.binary_sensor.door_window_sensor_158d0001ab1b67.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.binary_sensor.door_window_sensor_158d0001ab1b67.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('binary_sensor.door_window_sensor_158d0001ab1b67', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_ouv_garage:
      friendly_name: Ouverture Porte Garage
      value_template: >
        {% if is_state('binary_sensor.door_window_sensor_158d0001d8526a', 'unknown') %}
          110
        {% else %}
          {{ states.binary_sensor.door_window_sensor_158d0001d8526a.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.binary_sensor.door_window_sensor_158d0001d8526a.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('binary_sensor.door_window_sensor_158d0001d8526a', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_ouv_entree:
      friendly_name: Ouverture Entrée
      value_template: >
        {% if is_state('binary_sensor.door_window_sensor_158d0001ab5aaa', 'unknown') %}
          110
        {% else %}
          {{ states.binary_sensor.door_window_sensor_158d0001ab5aaa.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.binary_sensor.door_window_sensor_158d0001ab5aaa.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('binary_sensor.door_window_sensor_158d0001ab5aaa', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_ouv_terasse:
      friendly_name: Ouverture Terasse
      value_template: >
        {% if is_state('binary_sensor.door_window_sensor_158d0001dbd24f', 'unknown') %}
          110
        {% else %}
          {{ states.binary_sensor.door_window_sensor_158d0001dbd24f.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.binary_sensor.door_window_sensor_158d0001dbd24f.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('binary_sensor.door_window_sensor_158d0001dbd24f', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_ouv_sdb:
      friendly_name: Ouverture sdb sur jardin
      value_template: >
        {% if is_state('binary_sensor.door_window_sensor_158d0001de78e5', 'unknown') %}
          110
        {% else %}
          {{ states.binary_sensor.door_window_sensor_158d0001de78e5.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.binary_sensor.door_window_sensor_158d0001de78e5.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('binary_sensor.door_window_sensor_158d0001de78e5', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_tmp_salon:
      friendly_name: Température Salon
      value_template: >
        {% if is_state('sensor.temperature_158d0001b8f1b1', 'unknown') %}
          110
        {% else %}
          {{ states.sensor.temperature_158d0001b8f1b1.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.sensor.temperature_158d0001b8f1b1.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('sensor.temperature_158d0001b8f1b1', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_tmp_sdb:
      friendly_name: Température SDB
      value_template: >
        {% if is_state('sensor.temperature_158d00022734f8', 'unknown') %}
          110
        {% else %}
          {{ states.sensor.temperature_158d00022734f8.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.sensor.temperature_158d00022734f8.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('sensor.temperature_158d00022734f8', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_tmp_doudou:
      friendly_name: Température Doudou
      value_template: >
        {% if is_state('sensor.temperature_158d0001b96127', 'unknown') %}
          110
        {% else %}
          {{ states.sensor.temperature_158d0001b96127.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.sensor.temperature_158d0001b96127.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('sensor.temperature_158d0001b96127', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_tmp_chambre:
      friendly_name: Température Chambre
      value_template: >
        {% if is_state('sensor.temperature_158d0001b92bcc', 'unknown') %}
          110
        {% else %}
          {{ states.sensor.temperature_158d0001b92bcc.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.sensor.temperature_158d0001b92bcc.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('sensor.temperature_158d0001b92bcc', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_aspi:
      friendly_name: Aspirateur
      value_template: >
        {% if is_state('vacuum.xiaomi_vacuum_cleaner', 'unknown') %}
          110
        {% else %}
          {{ states.vacuum.xiaomi_vacuum_cleaner.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('vacuum.xiaomi_vacuum_cleaner', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_btn_cuisine:
      friendly_name: Bouton cuisine
      value_template: >
        {% if is_state('binary_sensor.switch_158d0001e18d16', 'unknown') %}
          110
        {% else %}
          {{ states.binary_sensor.switch_158d0001e18d16.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.binary_sensor.switch_158d0001e18d16.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('binary_sensor.switch_158d0001e18d16', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_btn_douche:
      friendly_name: Bouton douche
      value_template: >
        {% if is_state('binary_sensor.switch_158d0002134b92', 'unknown') %}
          110
        {% else %}
          {{ states.binary_sensor.switch_158d0002134b92.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.binary_sensor.switch_158d0002134b92.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('binary_sensor.switch_158d0002134b92', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
    bat_btn_garage:
      friendly_name: Bouton garage
      value_template: >
        {% if is_state('binary_sensor.switch_158d0001e18d90', 'unknown') %}
          110
        {% else %}
          {{ states.binary_sensor.switch_158d0001e18d90.attributes["battery_level"] | float}}
        {% endif %}
      icon_template: >
        {% set battery_level_xod1 = states.binary_sensor.switch_158d0001e18d90.attributes.battery_level|default(0)|int %}
        {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
        {% if battery_round_xod1 >= 100 or is_state('binary_sensor.switch_158d0001e18d90', 'unknown') %}
          mdi:battery
        {% elif battery_round_xod1 > 0 %}
          mdi:battery-{{ battery_round_xod1 }}
        {% else %}
          mdi:battery-charging-wireless-outline
        {% endif %}
      unit_of_measurement: '%'
### Dernier Mouvement ###
    last_motion:
      friendly_name: Dernier mouvement
      value_template: >
        {% set allmotion = states | selectattr('entity_id', 'in', state_attr('group.motion_sensors', 'entity_id')) | list %}
        {% set open= allmotion | map(attribute='last_changed') | list |max %}
        {{allmotion |selectattr('last_changed','eq', open)|map(attribute='name')|list|join}} le {{ as_timestamp(open) | timestamp_custom('%d/%m/%Y à %-Hh%M') }}
### Portes ouvertes
    opened_doors:
      friendly_name:  Portes ouvertes
      value_template: >
        {% set alldoors = states | selectattr('entity_id', 'in', state_attr('group.door_sensors', 'entity_id')) | list %}
        {% set forceupdate= strptime(states.sensor.date_time.state, '%Y-%m-%d, %H:%M')%}
        {% set open= alldoors | selectattr('state', 'equalto', 'on') | list %}
        {{ open| length}} / {{ alldoors | length}} ({{open | map(attribute='name') |list | join(', ') }})
### Fenetres ouvertes
    opened_windows:
      friendly_name:  Fenetres ouvertes
      value_template: >
        {% set allwindows = states | selectattr('entity_id', 'in', state_attr('group.window_sensors', 'entity_id')) | list %}
        {% set forceupdate= strptime(states.sensor.date_time.state, '%Y-%m-%d, %H:%M')%}
        {% set open= allwindows | selectattr('state', 'equalto', 'on') | list %}
        {{ open| length}} / {{ allwindows | length}} ({{open | map(attribute='name') |list | join(', ') }})
### Lumières allumées
    active_lights:
      friendly_name:  Lumières allumées
      value_template: >
        {% set alllights = states | selectattr('entity_id', 'in', state_attr('group.monitored_light', 'entity_id')) | list %}
        {% set forceupdate= strptime(states.sensor.date_time.state, '%Y-%m-%d, %H:%M')%}
        {% set turnedon= alllights | selectattr('state', 'equalto', 'on') | list %}
        {{ turnedon| length}} / {{ alllights | length}} ({{turnedon | map(attribute='name') |list | join(', ') }})
### Porte garage
    garage_summary:
      friendly_name: Etat Porte Garage
      value_template: >
            {% if is_state("sensor.garage_door_status", "closed") -%} Fermée {%- else -%} Ouverte {%- endif %} depuis {{ states("sensor.garage_door_since") }}
### trackers visibles
    home_trackers:
      friendly_name:  Trackers visibles
      value_template: >
        {% set alltrackers = states | selectattr('entity_id', 'in', state_attr('group.tracked_devices', 'entity_id')) | list %}
        {% set forceupdate= strptime(states.sensor.date_time.state, '%Y-%m-%d, %H:%M')%}
        {% set present= alltrackers | selectattr('state', 'equalto', 'home') | list %}
        {{ present| length}} / {{ alltrackers| length}} ({{present | map(attribute='name') |list | join(', ') }})
### Moyennes ###
    average_temperature:
      friendly_name: Températe moyenne
      unit_of_measurement: '°C'
      value_template: >
           {% set sensors = states | selectattr('entity_id', 'in', state_attr('group.room_temperature', 'entity_id')) | list %}
           {% set forceupdate= strptime(states.sensor.date_time.state, '%Y-%m-%d, %H:%M')%}
           {% set values = sensors | map(attribute='state')|map('float')|list%}
           {{ (values |sum / values |length)|round(2) }}
    average_humidity:
      friendly_name: Humidité moyenne
      unit_of_measurement: '%'
      value_template: >
           {% set sensors = states | selectattr('entity_id', 'in', state_attr('group.room_humidity', 'entity_id')) | list %}
           {% set forceupdate= strptime(states.sensor.date_time.state, '%Y-%m-%d, %H:%M')%}
           {% set values = sensors | map(attribute='state')|map('float')|list%}
           {{ (values |sum / values |length)|round(2) }}

- platform: time_date
  display_options:
    - 'date_time'
- platform: synologydsm
  host: !redacted
  port: 5000
  ssl: false
  username: !secret nas_user
  password: !secret nas_pass
  monitored_conditions:
      - cpu_total_load
      - volume_size_total
      - volume_size_used
      - volume_percentage_used
- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /
    - type: disk_use
      arg: /
    - type: disk_free
      arg: /
    - type: memory_free
    - type: last_boot
    - type: processor_use